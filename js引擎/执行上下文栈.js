// 1.在全局代码执行前，JS引擎就会创建一个栈来存储管理所有的执行上下文对象
// 2.在全局执行上下文确定后，将其添加到栈中（压栈）(先进后出)
// 3.在函数执行上下文创建后(函数执行才会创建上下文)，将其添加到栈中（压栈）
// 4.在当前函数执行后，将栈顶的对象移除
// 5.当所有代码执行完成后，栈中只剩下window



//1.进入全局执行创建上下文对象
var a = 10;
var bar = function (x) {
    var b = 3;
    foo(x + b)//3.进入foo函数执行创建上下文对象
}
var foo = function (y) {
    var c = 8
    console.log(a + c + y)
}

bar()//2.进入bar函数执行创建上下文对象
//函数执行才会创建函数上下文//这边是2个加上window一共三个上下文栈
bar()
//再次执行就会再次创建//执行2次就是4个函数加上window一共5个上下文栈